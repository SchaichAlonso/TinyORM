"use strict";(self.webpackChunktinyorm_github_io=self.webpackChunktinyorm_github_io||[]).push([[168],{2360:function(e,t,n){n.d(t,{Z:function(){return o}});var l=n(7294),a=n(6010),i="tabItem_OmH5";function o(e){var t=e.children,n=e.hidden,o=e.className;return l.createElement("div",{role:"tabpanel",className:(0,a.Z)(i,o),hidden:n},t)}},9877:function(e,t,n){n.d(t,{Z:function(){return c}});var l=n(7462),a=n(7294),i=n(2389),o=n(7392),r=n(7094),d=n(2466),s=n(6010),p="tabList_uSqn",u="tabItem_LplD";function m(e){var t,n,i,m=e.lazy,c=e.block,k=e.defaultValue,h=e.values,N=e.groupId,g=e.className,b=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=h?h:b.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),f=(0,o.l)(v,(function(e,t){return e.value===t.value}));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var C=null===k?k:null!=(t=null!=k?k:null==(n=b.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(i=b[0])?void 0:i.props.value;if(null!==C&&!v.some((function(e){return e.value===C})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+C+'" but none of its children has the corresponding value. Available values are: '+v.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,r.U)(),T=w.tabGroupChoices,y=w.setTabGroupChoices,I=(0,a.useState)(C),E=I[0],_=I[1],H=[],x=(0,d.o5)().blockElementScrollPositionUntilNextRender;if(null!=N){var M=T[N];null!=M&&M!==E&&v.some((function(e){return e.value===M}))&&_(M)}var R=function(e){var t=e.currentTarget,n=H.indexOf(t),l=v[n].value;l!==E&&(x(t),_(l),null!=N&&y(N,l))},q=function(e){var t,n=null;switch(e.key){case"ArrowRight":var l=H.indexOf(e.currentTarget)+1;n=H[l]||H[0];break;case"ArrowLeft":var a=H.indexOf(e.currentTarget)-1;n=H[a]||H[H.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,s.Z)("tabs-container",p)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":c},g)},v.map((function(e){var t=e.value,n=e.label,i=e.attributes;return a.createElement("li",(0,l.Z)({role:"tab",tabIndex:E===t?0:-1,"aria-selected":E===t,key:t,ref:function(e){return H.push(e)},onKeyDown:q,onFocus:R,onClick:R},i,{className:(0,s.Z)("tabs__item",u,null==i?void 0:i.className,{"tabs__item--active":E===t})}),null!=n?n:t)}))),m?(0,a.cloneElement)(b.filter((function(e){return e.props.value===E}))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},b.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==E})}))))}function c(e){var t=(0,i.Z)();return a.createElement(m,(0,l.Z)({key:String(t)},e))}},2044:function(e,t,n){n.d(t,{C:function(){return d},Fo:function(){return o},IM:function(){return s},IZ:function(){return l},RS:function(){return m},al:function(){return u},jk:function(){return r},q5:function(){return i},qb:function(){return p},wU:function(){return a}});var l="shell",a="application",i="bash",o="pwsh",r="application",d="bash",s="pwsh",p="TestApp",u="$HOME/Code/c/",m="$env:USERPROFILE\\Code\\c\\"},4355:function(e,t,n){n.d(t,{Z:function(){return i}});var l=n(7294),a=n(9482);function i(){var e=(0,l.useContext)(a.Z);if(null!=e)return e;throw new Error("useRootFolderContext is used outside of Layout component.")}},6005:function(e,t,n){n.d(t,{AE:function(){return r},EA:function(){return o},em:function(){return s},go:function(){return d},mT:function(){return p},we:function(){return u}});var l=n(4355),a=n(2389),i=n(2044),o=function(e,t){var n;return void 0===t&&(t=!0),m(null!=(n=(0,l.Z)().rootFolder[e])?n:s(e),e,t)},r=function(){var e;return null!=(e=(0,l.Z)().rootFolder[i.wU])?e:s(i.wU)},d=function(e,t){if(void 0===t&&(t=!0),null==e)throw new Error("The groupId in the applicationFolderPath() can not be empty.");var n=t||e!==i.Fo?"/":"\\";return m(o(e)+n+r(),e,t)};function s(e){if(null==e)throw new Error("The groupId in the folderDefaultValue() can not be empty.");if(!(0,a.Z)())return"";switch(e){case i.Fo:return i.RS;case i.q5:return i.al;case i.wU:return i.qb;default:throw new Error("No default value for '"+e+"' groupId in the folderDefaultValue().")}}function p(e){return e===i.wU}function u(e,t){if(null==t||""===t)return t;var n="$ENV{$1}$2";switch(e){case i.Fo:return k(t).replace(/\$env:(.+?)(\/.*)/,n);case i.q5:return t.replace(/\$(.+?)(\/.*)/,n);default:throw new Error("Unsupported shell type '"+e+"' in the convertToCmakeEnvVariable().")}}function m(e,t,n){if(void 0===n&&(n=!0),null==e||""===e)return e;if(t!==i.Fo)return c(e);var l=c(e);return n?k(l):function(e){return null==e||""===e?e:e.replaceAll(/\/+/g,"\\")}(l)}function c(e){return null==e||""===e?e:e.replace(/[/\\]+$/,"")}function k(e){return null==e||""===e?e:e.replaceAll(/\\+(?! )/g,"/")}},4588:function(e,t,n){n.r(t),n.d(t,{assets:function(){return h},contentTitle:function(){return c},default:function(){return b},frontMatter:function(){return m},metadata:function(){return k},toc:function(){return N}});var l=n(7462),a=n(3366),i=(n(7294),n(3905)),o=n(2258),r=n(2360),d=n(9877),s=n(2044),p=n(6005),u=["components"],m={sidebar_position:2,sidebar_label:"Hello world",description:"Hello world example created in the terminal and QtCreator IDE."},c="Building: Hello world",k={unversionedId:"building/hello-world",id:"building/hello-world",title:"Building: Hello world",description:"Hello world example created in the terminal and QtCreator IDE.",source:"@site/docs/building/hello-world.mdx",sourceDirName:"building",slug:"/building/hello-world",permalink:"/building/hello-world",draft:!1,editUrl:"https://github.com/silverqx/TinyORM-github.io/edit/main/docs/building/hello-world.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Hello world",description:"Hello world example created in the terminal and QtCreator IDE."},sidebar:"tinyormSidebar",previous:{title:"TinyORM",permalink:"/building/tinyorm"},next:{title:"Migrations",permalink:"/building/migrations"}},h={},N=[{value:"Introduction",id:"introduction",level:2},{value:"Prepare SQLite 3 database",id:"prepare-sqlite-3-database",level:2},{value:"Install dependencies",id:"install-dependencies",level:2},{value:"Using vcpkg.json <small>(manifest mode)</small>",id:"using-vcpkg-json",level:4},{value:"Using vcpkg install <small>(manually)</small>",id:"using-vcpkg-install",level:4},{value:"Source code",id:"source-code",level:2},{value:"Hello world with CMake",id:"hello-world-with-cmake",level:2},{value:"CMake project",id:"cmake-project",level:3},{value:"Build Hello world",id:"build-hello-world-cmake",level:3},{value:"Execute Hello world",id:"execute-hello-world-cmake",level:3},{value:"Hello world with qmake",id:"hello-world-with-qmake",level:2},{value:"qmake project",id:"qmake-project",level:3},{value:"Configure using .qmake.conf",id:"configure-using-qmakeconf",level:4},{value:"Build Hello world",id:"build-hello-world-qmake",level:3},{value:"Execute Hello world",id:"execute-hello-world-qmake",level:3}],g={toc:N};function b(e){var t=e.components,m=(0,a.Z)(e,u);return(0,i.kt)("wrapper",(0,l.Z)({},g,m,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"building-hello-world"},"Building: Hello world"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#introduction"},"Introduction")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#prepare-sqlite-3-database"},"Prepare SQLite 3 database")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#install-dependencies"},"Install dependencies"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#using-vcpkg-json"},"Using vcpkg.json")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#using-vcpkg-install"},"Using vcpkg install")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#source-code"},"Source code")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#hello-world-with-cmake"},"Hello world with CMake"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#cmake-project"},"CMake project")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#build-hello-world-cmake"},"Build Hello world")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#execute-hello-world-cmake"},"Execute Hello world")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#hello-world-with-qmake"},"Hello world with qmake"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#qmake-project"},"qmake project")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#build-hello-world-qmake"},"Build Hello world")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#execute-hello-world-qmake"},"Execute Hello world"))))),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"We will try to create the simplest working application in the terminal with the ",(0,i.kt)("inlineCode",{parentName:"p"},"CMake")," and in the ",(0,i.kt)("inlineCode",{parentName:"p"},"QtCreator")," IDE with the ",(0,i.kt)("inlineCode",{parentName:"p"},"qmake"),"."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"HelloWorld")," example also expects the following ",(0,i.kt)("a",{parentName:"p",href:"/building/tinyorm#folders-structure"},"folders structure"),", let's create them."),(0,i.kt)(d.Z,{groupId:s.IZ,mdxType:"Tabs"},(0,i.kt)(r.Z,{value:s.Fo,label:s.IM,mdxType:"TabItem"},(0,i.kt)(o.Z,{className:"language-powershell",mdxType:"CodeBlock"},"cd "+(0,p.go)(s.Fo)+"\nmkdir HelloWorld/HelloWorld\ncd HelloWorld")),(0,i.kt)(r.Z,{value:s.q5,label:s.C,mdxType:"TabItem"},(0,i.kt)(o.Z,{className:"language-bash",mdxType:"CodeBlock"},"cd "+(0,p.go)(s.q5)+"\nmkdir -p HelloWorld/HelloWorld\ncd HelloWorld"))),(0,i.kt)("h2",{id:"prepare-sqlite-3-database"},"Prepare SQLite 3 database"),(0,i.kt)("p",null,"Simplest will be to demonstrate the ",(0,i.kt)("inlineCode",{parentName:"p"},"HelloWorld")," example with the ",(0,i.kt)("inlineCode",{parentName:"p"},"SQLite 3")," database."),(0,i.kt)("p",null,"To create and insert two rows into the ",(0,i.kt)("inlineCode",{parentName:"p"},"SQLite 3")," database, execute the following command in the terminal."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"sqlite3 HelloWorld.sqlite3 \"\ncreate table posts(id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, name VARCHAR NOT NULL);\ninsert into posts values(1, 'First Post');\ninsert into posts values(2, 'Second Post');\nselect * from posts;\"\n")),(0,i.kt)("h2",{id:"install-dependencies"},"Install dependencies"),(0,i.kt)("p",null,"First, install the ",(0,i.kt)("inlineCode",{parentName:"p"},"vcpkg")," package manager as is described ",(0,i.kt)("a",{parentName:"p",href:"/building/tinyorm#vcpkg"},"here"),"."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"range-v3")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"tabulate")," libraries are required dependencies because ",(0,i.kt)("inlineCode",{parentName:"p"},"TinyORM")," uses them in header files, you have to install them before you can use ",(0,i.kt)("inlineCode",{parentName:"p"},"TinyORM"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},"tabulate")," library is only needed in the ",(0,i.kt)("inlineCode",{parentName:"p"},"tom")," migrations it's used by the ",(0,i.kt)("inlineCode",{parentName:"p"},"migrate:status")," command."),(0,i.kt)("p",null,"There are two ways how to install the ",(0,i.kt)("inlineCode",{parentName:"p"},"range-v3")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"tabulate")," libraries using ",(0,i.kt)("inlineCode",{parentName:"p"},"vcpkg"),"."),(0,i.kt)("h4",{id:"using-vcpkg-json"},"Using vcpkg.json ",(0,i.kt)("small",null,"(manifest mode)")),(0,i.kt)("p",null,"Create a ",(0,i.kt)("inlineCode",{parentName:"p"},"vcpkg.json")," file with the following content. ",(0,i.kt)("inlineCode",{parentName:"p"},"CMake")," example below uses this method."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd HelloWorld\nvim vcpkg.json\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "$schema": "https://raw.githubusercontent.com/microsoft/vcpkg/master/scripts/vcpkg.schema.json",\n  "name": "tinyorm-hello-world",\n  "version-semver": "0.1.0",\n  "description": "HelloWorld example with TinyORM library.",\n  "maintainers": "Silver Zachara <silver.zachara@gmail.com>",\n  "supports": "!(uwp | arm | android | emscripten)",\n  "dependencies": [\n    "range-v3",\n    "tabulate"\n  ]\n}\n')),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Only ",(0,i.kt)("inlineCode",{parentName:"p"},"CMake")," via the ",(0,i.kt)("inlineCode",{parentName:"p"},"toolchain file")," supports this method."))),(0,i.kt)("h4",{id:"using-vcpkg-install"},"Using vcpkg install ",(0,i.kt)("small",null,"(manually)")),(0,i.kt)("p",null,"This method can be used with both ",(0,i.kt)("inlineCode",{parentName:"p"},"CMake")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"qmake"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd ../../vcpkg\n\nvcpkg search range-v3\nvcpkg search tabulate\nvcpkg install range-v3 tabulate\nvcpkg list\n")),(0,i.kt)("h2",{id:"source-code"},"Source code"),(0,i.kt)("p",null,"Let's start in the ",(0,i.kt)("inlineCode",{parentName:"p"},"HelloWorld")," project folder."),(0,i.kt)(d.Z,{groupId:s.IZ,mdxType:"Tabs"},(0,i.kt)(r.Z,{value:s.Fo,label:s.IM,mdxType:"TabItem"},(0,i.kt)(o.Z,{className:"language-powershell",mdxType:"CodeBlock"},"cd "+(0,p.go)(s.Fo)+"/HelloWorld/HelloWorld")),(0,i.kt)(r.Z,{value:s.q5,label:s.C,mdxType:"TabItem"},(0,i.kt)(o.Z,{className:"language-bash",mdxType:"CodeBlock"},"cd "+(0,p.go)(s.q5)+"/HelloWorld/HelloWorld"))),(0,i.kt)("p",null,"Create ",(0,i.kt)("inlineCode",{parentName:"p"},"main.cpp")," source file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"vim main.cpp\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"To paste a source code correctly in ",(0,i.kt)("inlineCode",{parentName:"p"},"vim"),", press ",(0,i.kt)("kbd",null,"Shift")," + ",(0,i.kt)("kbd",null,"p"),"."))),(0,i.kt)("p",null,"And paste the following code."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'#include <QDebug>\n\n#ifdef _WIN32\n#  include <qt_windows.h>\n#endif\n\n#include <orm/db.hpp>\n\nusing Orm::DB;\n\nint main(int /*unused*/, char */*unused*/[])\n{\n#ifdef _WIN32\n    SetConsoleOutputCP(CP_UTF8);\n//    SetConsoleOutputCP(1250);\n#endif\n\n    // Ownership of a shared_ptr()\n    auto manager = DB::create({\n        {"driver",   "QSQLITE"},\n        {"database", qEnvironmentVariable("DB_DATABASE", "HelloWorld.sqlite3")},\n        {"check_database_exists", true},\n    });\n\n    auto posts = DB::select("select * from posts");\n\n    while(posts.next())\n        qDebug() << posts.value("id").toULongLong() << posts.value("name").toString();\n}\n')),(0,i.kt)("h2",{id:"hello-world-with-cmake"},"Hello world with CMake"),(0,i.kt)("p",null,"Create a folder for the ",(0,i.kt)("inlineCode",{parentName:"p"},"CMake")," build."),(0,i.kt)(d.Z,{groupId:s.IZ,mdxType:"Tabs"},(0,i.kt)(r.Z,{value:s.Fo,label:s.IM,mdxType:"TabItem"},(0,i.kt)(o.Z,{className:"language-powershell",mdxType:"CodeBlock"},"cd ..\nmkdir HelloWorld-builds-cmake/build-debug\n\ncd HelloWorld-builds-cmake/build-debug")),(0,i.kt)(r.Z,{value:s.q5,label:s.C,mdxType:"TabItem"},(0,i.kt)(o.Z,{className:"language-bash",mdxType:"CodeBlock"},"cd ..\nmkdir -p HelloWorld-builds-cmake/build-debug\n\ncd HelloWorld-builds-cmake/build-debug"))),(0,i.kt)("h3",{id:"cmake-project"},"CMake project"),(0,i.kt)("p",null,"Create ",(0,i.kt)("inlineCode",{parentName:"p"},"CMakeLists.txt")," file with the following content."),(0,i.kt)(d.Z,{groupId:s.IZ,mdxType:"Tabs"},(0,i.kt)(r.Z,{value:s.Fo,label:s.IM,mdxType:"TabItem"},(0,i.kt)(o.Z,{className:"language-cmake",mdxType:"CodeBlock"},'cmake_minimum_required(VERSION VERSION 3.20...3.23 FATAL_ERROR)\n\nproject(HelloWorld LANGUAGES CXX)\n\n# build tree\nlist(APPEND CMAKE_PREFIX_PATH "'+(0,p.we)(s.Fo,(0,p.go)(s.Fo))+'/TinyORM/TinyORM-builds-cmake/build-debug")\n\nset(CMAKE_CXX_STANDARD 20)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_CXX_EXTENSIONS OFF)\n\nadd_executable(HelloWorld\n  main.cpp\n)\n\nfind_package(QT NAMES Qt6 Qt5 COMPONENTS Core REQUIRED)\nfind_package(Qt${QT_VERSION_MAJOR} COMPONENTS Core REQUIRED)\nfind_package(TinyOrm 0.1.0 CONFIG REQUIRED)\n\ntarget_link_libraries(HelloWorld\n    PRIVATE\n        Qt${QT_VERSION_MAJOR}::Core\n        TinyOrm::TinyOrm\n)')),(0,i.kt)(r.Z,{value:s.q5,label:s.C,mdxType:"TabItem"},(0,i.kt)(o.Z,{className:"language-cmake",mdxType:"CodeBlock"},'cmake_minimum_required(VERSION VERSION 3.20...3.23 FATAL_ERROR)\n\nproject(HelloWorld LANGUAGES CXX)\n\n# build tree\nlist(APPEND CMAKE_PREFIX_PATH "'+(0,p.we)(s.q5,(0,p.go)(s.q5))+'/TinyORM/TinyORM-builds-cmake/build-debug")\n\nset(CMAKE_CXX_STANDARD 20)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\nset(CMAKE_CXX_EXTENSIONS OFF)\n\nadd_executable(HelloWorld\n  main.cpp\n)\n\nfind_package(QT NAMES Qt6 Qt5 COMPONENTS Core REQUIRED)\nfind_package(Qt${QT_VERSION_MAJOR} COMPONENTS Core REQUIRED)\nfind_package(TinyOrm 0.1.0 CONFIG REQUIRED)\n\ntarget_link_libraries(HelloWorld\n    PRIVATE\n        Qt${QT_VERSION_MAJOR}::Core\n        TinyOrm::TinyOrm\n)'))),(0,i.kt)("h3",{id:"build-hello-world-cmake"},"Build Hello world"),(0,i.kt)("p",null,"Now you are ready to configure ",(0,i.kt)("inlineCode",{parentName:"p"},"HelloWorld")," ",(0,i.kt)("inlineCode",{parentName:"p"},"CMake")," application."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd ../HelloWorld-builds-cmake/build-debug\n")),(0,i.kt)(d.Z,{groupId:s.IZ,mdxType:"Tabs"},(0,i.kt)(r.Z,{value:s.Fo,label:s.IM,mdxType:"TabItem"},(0,i.kt)(o.Z,{className:"language-powershell",mdxType:"CodeBlock"},'cmake.exe `\n-S "'+(0,p.go)(s.Fo)+'/HelloWorld/HelloWorld" `\n-B "'+(0,p.go)(s.Fo)+"/HelloWorld/HelloWorld-builds-cmake/build-debug\" `\n-G 'Ninja' `\n-D CMAKE_BUILD_TYPE:STRING='Debug' `\n-D CMAKE_TOOLCHAIN_FILE:FILEPATH=\""+(0,p.EA)(s.Fo)+'/vcpkg/scripts/buildsystems/vcpkg.cmake" `\n-D CMAKE_INSTALL_PREFIX:PATH="'+(0,p.EA)(s.Fo)+'/tmp/HelloWorld"')),(0,i.kt)(r.Z,{value:s.q5,label:s.C,mdxType:"TabItem"},(0,i.kt)(o.Z,{className:"language-bash",mdxType:"CodeBlock"},'cmake \\\n-S "'+(0,p.go)(s.q5)+'/HelloWorld/HelloWorld" \\\n-B "'+(0,p.go)(s.q5)+"/HelloWorld/HelloWorld-builds-cmake/build-debug\" \\\n-G 'Ninja' \\\n-D CMAKE_BUILD_TYPE:STRING='Debug' \\\n-D CMAKE_TOOLCHAIN_FILE:FILEPATH=\""+(0,p.EA)(s.q5)+'/vcpkg/scripts/buildsystems/vcpkg.cmake" \\\n-D CMAKE_INSTALL_PREFIX:PATH="'+(0,p.EA)(s.q5)+'/tmp/TinyORM"'))),(0,i.kt)("p",null,"And build."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cmake --build . --target all\n")),(0,i.kt)("h3",{id:"execute-hello-world-cmake"},"Execute Hello world"),(0,i.kt)("p",null,"Do not forget to add ",(0,i.kt)("inlineCode",{parentName:"p"},"TinyOrm0d.dll")," on the path on Windows and on the ",(0,i.kt)("inlineCode",{parentName:"p"},"LD_LIBRARY_PATH")," on Linux, so ",(0,i.kt)("inlineCode",{parentName:"p"},"HelloWorld")," application can find it during execution, as is described ",(0,i.kt)("a",{parentName:"p",href:"/building/tinyorm#tinyorm-on-path-cmake"},"here"),"."),(0,i.kt)(d.Z,{groupId:s.IZ,name:"tinyorm-on-path",mdxType:"Tabs"},(0,i.kt)(r.Z,{value:s.Fo,label:s.IM,mdxType:"TabItem"},(0,i.kt)(o.Z,{className:"language-powershell",mdxType:"CodeBlock"},'$env:Path = "'+(0,p.go)(s.Fo,!1)+'\\TinyORM\\TinyORM-builds-cmake\\build-debug;" + $env:Path')),(0,i.kt)(r.Z,{value:s.q5,label:s.C,mdxType:"TabItem"},(0,i.kt)(o.Z,{className:"language-bash",mdxType:"CodeBlock"},"export LD_LIBRARY_PATH="+(0,p.go)(s.q5)+"/TinyORM/TinyORM-builds-cmake/build-debug${PATH:+:}$PATH"))),(0,i.kt)("p",null,"Create a symbolic link to the ",(0,i.kt)("inlineCode",{parentName:"p"},"HelloWorld.sqlite3")," database inside the build folder. If you do not have enabled symbolic links without ",(0,i.kt)("inlineCode",{parentName:"p"},"Administrator")," rights on your ",(0,i.kt)("inlineCode",{parentName:"p"},"Windows"),", you can just simply copy the ",(0,i.kt)("inlineCode",{parentName:"p"},"HelloWorld.sqlite3")," database or ",(0,i.kt)("a",{parentName:"p",href:"/building/tinyorm#allow-symbolic-links-unprivileged"},(0,i.kt)("inlineCode",{parentName:"a"},"Allow symbolic links unprivileged")),"."),(0,i.kt)(d.Z,{groupId:s.IZ,name:"tinyorm-on-path",mdxType:"Tabs"},(0,i.kt)(r.Z,{value:s.Fo,label:s.IM,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-powershell"},"New-Item -ItemType SymbolicLink -Target ../../HelloWorld.sqlite3 -Name HelloWorld.sqlite3\n# Or simply copy\nCopy-Item ../../HelloWorld.sqlite3 .\n"))),(0,i.kt)(r.Z,{value:s.q5,label:s.C,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ln -s ../../HelloWorld.sqlite3 .\n")))),(0,i.kt)("p",null,"Execute ",(0,i.kt)("inlineCode",{parentName:"p"},"HelloWorld")," example."),(0,i.kt)(d.Z,{groupId:s.IZ,mdxType:"Tabs"},(0,i.kt)(r.Z,{value:s.Fo,label:s.IM,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-powershell"},".\\HelloWorld.exe\n"))),(0,i.kt)(r.Z,{value:s.q5,label:s.C,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./HelloWorld\n")))),(0,i.kt)("p",null,"The output will look like this."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-less"},'Executed prepared query (6ms, -1 results, 0 affected, tinyorm_default) : select * from posts\n1 "First Post"\n2 "Second Post"\n')),(0,i.kt)("h2",{id:"hello-world-with-qmake"},"Hello world with qmake"),(0,i.kt)("p",null,"Create a folder for the ",(0,i.kt)("inlineCode",{parentName:"p"},"qmake")," build."),(0,i.kt)(d.Z,{groupId:s.IZ,mdxType:"Tabs"},(0,i.kt)(r.Z,{value:s.Fo,label:s.IM,mdxType:"TabItem"},(0,i.kt)(o.Z,{className:"language-powershell",mdxType:"CodeBlock"},"cd "+(0,p.go)(s.Fo)+"/HelloWorld\n\nmkdir HelloWorld-builds-qmake")),(0,i.kt)(r.Z,{value:s.q5,label:s.C,mdxType:"TabItem"},(0,i.kt)(o.Z,{className:"language-bash",mdxType:"CodeBlock"},"cd "+(0,p.go)(s.q5)+"/HelloWorld\n\nmkdir HelloWorld-builds-qmake"))),(0,i.kt)("p",null,"The ",(0,i.kt)("a",{parentName:"p",href:"#source-code"},(0,i.kt)("inlineCode",{parentName:"a"},"source code"))," is the same as for the ",(0,i.kt)("inlineCode",{parentName:"p"},"HelloWorld CMake")," example."),(0,i.kt)("h3",{id:"qmake-project"},"qmake project"),(0,i.kt)("p",null,"Create ",(0,i.kt)("inlineCode",{parentName:"p"},"HelloWorld.pro")," qmake file with the following content."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd HelloWorld\nvim HelloWorld.pro\n")),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"To paste a source code correctly in ",(0,i.kt)("inlineCode",{parentName:"p"},"vim"),", press ",(0,i.kt)("kbd",null,"Shift")," + ",(0,i.kt)("kbd",null,"p"),"."))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-qmake"},"QT *= core sql\nQT -= gui\n\nTEMPLATE = app\n\nSOURCES += $$PWD/main.cpp\n\n# Configure TinyORM library\ninclude($$TINY_MAIN_DIR/TinyORM/qmake/TinyOrm.pri)\n\n# vcpkg - range-v3\nwin32-msvc: \\\n    INCLUDEPATH += $$quote($$TINY_VCPKG_INSTALLED/x64-windows/include/)\nmingw: \\\n    QMAKE_CXXFLAGS += -isystem $$shell_quote($$TINY_VCPKG_INSTALLED/x64-mingw-dynamic/include/)\nunix:!macx: \\\n    QMAKE_CXXFLAGS += -isystem $$shell_quote($$TINY_VCPKG_INSTALLED/x64-linux/include/)\n")),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The exact ",(0,i.kt)("a",{parentName:"p",href:"/building/tinyorm#folders-structure"},"folders structure")," is crucial in this example because the paths to the ",(0,i.kt)("inlineCode",{parentName:"p"},"TinyORM")," source and build folders are relative."))),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"On Linux ",(0,i.kt)("inlineCode",{parentName:"p"},"-isystem")," marks the directory as a system directory, it prevents warnings."),(0,i.kt)("p",{parentName:"div"},"On Windows you can use ",(0,i.kt)("inlineCode",{parentName:"p"},"QMAKE_CXXFLAGS_WARN_ON = -external:anglebrackets -external:W0"),", it applies a warning level 0 to the angel bracket includes; ",(0,i.kt)("inlineCode",{parentName:"p"},"#include <file>"),"."))),(0,i.kt)("h4",{id:"configure-using-qmakeconf"},"Configure using .qmake.conf"),(0,i.kt)("p",null,"Create ",(0,i.kt)("inlineCode",{parentName:"p"},".qmake.conf")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"HelloWorld")," project root folder with the following content."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-qmake"},"TINY_MAIN_DIR = $$clean_path($$PWD/../../TinyORM)\n# Name of this qmake variable is crucial\nTINYORM_BUILD_TREE = $$quote($$TINY_MAIN_DIR/TinyOrm-builds-qmake/build-TinyOrm-Desktop_Qt_6_2_4_MSVC2019_64bit-Debug)\n# vcpkg - range-v3\nTINY_VCPKG_INSTALLED = $$clean_path($$PWD/../../../vcpkg/installed)\n")),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"Configuring with the ",(0,i.kt)("inlineCode",{parentName:"p"},".qmake.conf")," file has one big advantage that is that you do not have to modify the project files."))),(0,i.kt)("h3",{id:"build-hello-world-qmake"},"Build Hello world"),(0,i.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"I recommend creating a new ",(0,i.kt)("inlineCode",{parentName:"p"},"Session")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"QtCreator IDE")," as is described ",(0,i.kt)("a",{parentName:"p",href:"/building/tinyorm#open-qtcreator-ide"},"here"),"."))),(0,i.kt)("p",null,"Now you can open the ",(0,i.kt)("inlineCode",{parentName:"p"},"HelloWorld.pro")," project in the ",(0,i.kt)("inlineCode",{parentName:"p"},"QtCreator IDE"),"."),(0,i.kt)("p",null,"This will open the ",(0,i.kt)("inlineCode",{parentName:"p"},"Configure Project")," tab, select some kit and update build folder paths to meet our ",(0,i.kt)("a",{parentName:"p",href:"/building/tinyorm#folders-structure"},"folders structure")," or like you want."),(0,i.kt)("img",{src:n(1465).Z,alt:"HelloWorld - QtCreator - Configure Project",width:"760"}),(0,i.kt)("p",null,"You are ready to configure build options, hit ",(0,i.kt)("kbd",null,"Ctrl"),"+",(0,i.kt)("kbd",null,"5")," to open ",(0,i.kt)("inlineCode",{parentName:"p"},"Project Settings")," tab and select ",(0,i.kt)("inlineCode",{parentName:"p"},"Build")," in the left sidebar to open the ",(0,i.kt)("inlineCode",{parentName:"p"},"Build Settings"),", it should look similar to the following picture."),(0,i.kt)("p",null,"Disable ",(0,i.kt)("inlineCode",{parentName:"p"},"QML debugging and profiling")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Qt Quick Compiler"),", they are not used."),(0,i.kt)("img",{src:n(6511).Z,className:"no-blurry",alt:"HelloWorld - QtCreator - Build Settings",width:"760"}),(0,i.kt)("p",null,"Everything is ready to build, you can press ",(0,i.kt)("kbd",null,"Ctrl"),"+",(0,i.kt)("kbd",null,"b")," to build the project."),(0,i.kt)("h3",{id:"execute-hello-world-qmake"},"Execute Hello world"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"QtCreator")," takes care about all the necessary configuration, sets up the build environment correctly and also prepends dependency libraries on the path on Windows and on the ",(0,i.kt)("inlineCode",{parentName:"p"},"LD_LIBRARY_PATH")," on Linux."),(0,i.kt)("p",null,"Only one thing you might want to change is to run the ",(0,i.kt)("inlineCode",{parentName:"p"},"HelloWorld")," example in the new terminal window. To do so, hit ",(0,i.kt)("kbd",null,"Ctrl"),"+",(0,i.kt)("kbd",null,"5")," to open the ",(0,i.kt)("inlineCode",{parentName:"p"},"Project Settings")," tab and select ",(0,i.kt)("inlineCode",{parentName:"p"},"Run")," in the left sidebar to open the ",(0,i.kt)("inlineCode",{parentName:"p"},"Run Settings"),", then in the ",(0,i.kt)("inlineCode",{parentName:"p"},"Run")," section select the ",(0,i.kt)("inlineCode",{parentName:"p"},"Run in terminal")," checkbox."),(0,i.kt)("p",null,"Create a symbolic link to the ",(0,i.kt)("inlineCode",{parentName:"p"},"HelloWorld.sqlite3")," database inside the build folder. If you do not have enabled symbolic links without ",(0,i.kt)("inlineCode",{parentName:"p"},"Administrator")," rights on your ",(0,i.kt)("inlineCode",{parentName:"p"},"Windows"),", you can just simply copy the ",(0,i.kt)("inlineCode",{parentName:"p"},"HelloWorld.sqlite3")," database or ",(0,i.kt)("a",{parentName:"p",href:"/building/tinyorm#allow-symbolic-links-unprivileged"},(0,i.kt)("inlineCode",{parentName:"a"},"Allow symbolic links unprivileged")),"."),(0,i.kt)(d.Z,{groupId:s.IZ,name:"tinyorm-on-path",mdxType:"Tabs"},(0,i.kt)(r.Z,{value:s.Fo,label:s.IM,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-powershell"},"cd ../HelloWorld-builds-qmake/build-HelloWorld-Desktop_Qt_5_15_2_MSVC2019_64bit-Debug\n\nNew-Item -ItemType SymbolicLink -Target ../../HelloWorld.sqlite3 -Name HelloWorld.sqlite3\n# Or simply copy\nCopy-Item ../../HelloWorld.sqlite3 .\n"))),(0,i.kt)(r.Z,{value:s.q5,label:s.C,mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd ../HelloWorld-builds-qmake/build-HelloWorld-Desktop_Qt_5_15_2_GCC_64bit-Debug\n\nln -s ../../HelloWorld.sqlite3 .\n")))),(0,i.kt)("p",null,"To execute the ",(0,i.kt)("inlineCode",{parentName:"p"},"HelloWorld")," example press ",(0,i.kt)("kbd",null,"Ctrl")," + ",(0,i.kt)("kbd",null,"r"),"."),(0,i.kt)("p",null,"The output will look like this."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-less"},'Executed prepared query (6ms, -1 results, 0 affected, tinyorm_default) : select * from posts\n1 "First Post"\n2 "Second Post"\n')))}b.isMDXComponent=!0},6511:function(e,t,n){t.Z=n.p+"assets/images/qmake-build_settings-e88e3fd0ef7457887c24004628a7c253.png"},1465:function(e,t,n){t.Z=n.p+"assets/images/qmake-configure_project-7aea3b08d102839d858f5a1b4a22d55b.png"}}]);