"use strict";(self.webpackChunktinyorm_github_io=self.webpackChunktinyorm_github_io||[]).push([[966],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),a=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},c=function(e){var t=a(e.components);return n.createElement(u.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,u=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=a(r),f=o,d=m["".concat(u,".").concat(f)]||m[f]||s[f]||i;return r?n.createElement(d,p(p({ref:t},c),{},{components:r})):n.createElement(d,p({ref:t},c))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,p=new Array(i);p[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,p[1]=l;for(var a=2;a<i;a++)p[a]=r[a];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4742:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return l},metadata:function(){return a},toc:function(){return s}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),p=["components"],l={sidebar_position:2,hide_table_of_contents:!0,description:"Platform requirements and supported compilers for TinyORM c++ library."},u="Supported Compilers",a={unversionedId:"supported-compilers",id:"supported-compilers",title:"Supported Compilers",description:"Platform requirements and supported compilers for TinyORM c++ library.",source:"@site/docs/supported-compilers.mdx",sourceDirName:".",slug:"/supported-compilers",permalink:"/supported-compilers",editUrl:"https://github.com/silverqx/TinyORM-github.io/edit/main/docs/supported-compilers.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,hide_table_of_contents:!0,description:"Platform requirements and supported compilers for TinyORM c++ library."},sidebar:"tinyormSidebar",previous:{title:"Dependencies",permalink:"/dependencies"},next:{title:"Building: TinyORM",permalink:"/building-tinyorm"}},c={},s=[],m={toc:s};function f(e){var t=e.components,r=(0,o.Z)(e,p);return(0,i.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"supported-compilers"},"Supported Compilers"),(0,i.kt)("p",null,"Following compilers are backed up by GitHub Action ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/silverqx/TinyORM/tree/main/.github/workflows"},"workflows")," (CI pipelines) which also include more then 900 unit tests."),(0,i.kt)("p",null,"Windows >=10:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"MSVC 2019 16.9 - 16.11.13"),(0,i.kt)("li",{parentName:"ul"},"MSYS2 UCRT64 GCC 10.2 - 11.3"),(0,i.kt)("li",{parentName:"ul"},"MSYS2 UCRT64 Clang 12 - 14")),(0,i.kt)("p",null,"Linux:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"GCC 10.2 - 11.3"),(0,i.kt)("li",{parentName:"ul"},"Clang 11 - 14")))}f.isMDXComponent=!0}}]);